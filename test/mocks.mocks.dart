// Mocks generated by Mockito 5.0.15 from annotations
// in film_freund/test/mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i3;

import 'package:film_freund/managers/user/user_manager.dart' as _i2;
import 'package:film_freund/services/auth/i_auth_service.dart' as _i4;
import 'package:film_freund/services/date_time.dart/date_time_service.dart'
    as _i5;
import 'package:film_freund/services/user/i_user_database.dart' as _i6;
import 'package:film_freund/services/user/user.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeDateTime_0 extends _i1.Fake implements DateTime {}

/// A class which mocks [UserManager].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserManager extends _i1.Mock implements _i2.UserManager {
  MockUserManager() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAuthenticated => (super
          .noSuchMethod(Invocation.getter(#isAuthenticated), returnValue: false)
      as bool);
  @override
  _i3.Future<_i4.AuthResult> signin({String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#signin, [], {#email: email, #password: password}),
          returnValue:
              Future<_i4.AuthResult>.value(_i4.AuthResult.createSuccess)) as _i3
          .Future<_i4.AuthResult>);
  @override
  _i3.Future<void> signout() =>
      (super.noSuchMethod(Invocation.method(#signout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [DateTimeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDateTimeService extends _i1.Mock implements _i5.DateTimeService {
  MockDateTimeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  DateTime get nowUtc => (super.noSuchMethod(Invocation.getter(#nowUtc),
      returnValue: _FakeDateTime_0()) as DateTime);
  @override
  String toString() => super.toString();
}

/// A class which mocks [IAuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthService extends _i1.Mock implements _i4.IAuthService {
  MockIAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isUserAuthenticated =>
      (super.noSuchMethod(Invocation.getter(#isUserAuthenticated),
          returnValue: false) as bool);
  @override
  _i3.Future<_i4.AuthResult> signin({String? email, String? password}) =>
      (super.noSuchMethod(
          Invocation.method(#signin, [], {#email: email, #password: password}),
          returnValue:
              Future<_i4.AuthResult>.value(_i4.AuthResult.createSuccess)) as _i3
          .Future<_i4.AuthResult>);
  @override
  _i3.Future<void> signout() =>
      (super.noSuchMethod(Invocation.method(#signout, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<void> delete() =>
      (super.noSuchMethod(Invocation.method(#delete, []),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}

/// A class which mocks [IUserDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUserDatabase extends _i1.Mock implements _i6.IUserDatabase {
  MockIUserDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<void> createUser(
          {String? id, String? firstName, String? lastName}) =>
      (super.noSuchMethod(
          Invocation.method(#createUser, [],
              {#id: id, #firstName: firstName, #lastName: lastName}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  _i3.Future<_i7.User?> getUser({String? id}) =>
      (super.noSuchMethod(Invocation.method(#getUser, [], {#id: id}),
          returnValue: Future<_i7.User?>.value()) as _i3.Future<_i7.User?>);
  @override
  _i3.Future<void> deleteUser({String? id}) =>
      (super.noSuchMethod(Invocation.method(#deleteUser, [], {#id: id}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i3.Future<void>);
  @override
  String toString() => super.toString();
}
